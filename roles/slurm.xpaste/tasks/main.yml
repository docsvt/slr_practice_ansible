---

- name: Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

- name: Add additional repositories for ruby and node js
  ansible.builtin.package:
    name:
      - epel-release
      - centos-release-scl

- name: Recalculate ruby prefix for repository
  ansible.builtin.set_fact:
    __xpaste_ruby_pkg_version: "{{ xpaste_ruby_version | replace('.', '') }}"

- name: Recalculate ruby root
  ansible.builtin.set_fact:
    __xpaste_ruby_root: "/opt/rh/rh-ruby{{ __xpaste_ruby_pkg_version }}/root"

- name: Add ruby packages
  ansible.builtin.package:
    name:
      - "rh-ruby{{ __xpaste_ruby_pkg_version }}"
      - "rh-ruby{{ __xpaste_ruby_pkg_version }}-scldevel"
      - "rh-ruby{{ __xpaste_ruby_pkg_version }}-rubygem-bundler"
      - "rh-ruby{{ __xpaste_ruby_pkg_version }}-ruby-devel"

- name: Put ld config file for ruby shared libraries
  ansible.builtin.copy:
    content: "{{ __xpaste_ruby_root }}/lib64"
    dest: "/etc/ld.so.conf.d/rh-ruby{{ __xpaste_ruby_pkg_version }}.conf"
    mode: "0644"
  register: __xpaste_ruby_ldconfig

- name: Rerun ldconfig # noqa: no-handler
  ansible.builtin.command: ldconfig
  when: __xpaste_ruby_ldconfig.changed
  changed_when: true # If __xpaste_ruby_ldconfig.changes then ldconfig - changed

- name: Copy application to deploy
  ansible.builtin.copy:
    src: "{{ xpaste_code_src }}/"
    dest: "{{ xpaste_project_root }}/"
    mode: "0644"
    directory_mode: "0755"

- name: Configure nokogiri builder
  ansible.builtin.command:
    argv:
      - "{{ __xpaste_ruby_root }}/bin/bundle"
      - "config"
      - "build.nokogiri"
      - "--use-system-libraries"
  args:
    chdir: "{{ xpaste_project_root }}"
  changed_when: false

- name: Add development libraries for building
  ansible.builtin.package:
    name:
      - "@development tools"
      - "libxml2-devel"
      - "libxslt-devel"
      - "postgresql-devel"
      - "nodejs"

- name: Build bundle for xpaste application
  community.general.bundler:
    chdir: "{{ xpaste_project_root }}"
    exclude_groups: development
    clean: true
    executable: "{{ __xpaste_ruby_root }}/bin/bundle"
  register: __xpaste_bundler_ret
  failed_when: not "Bundle complete!" in __xpaste_bundler_ret.stdout

- name: Create systemd service unit
  tags: systemd
  ansible.builtin.template:
    src: ./templates/xpaste.service.j2
    dest: /etc/systemd/system/xpaste.service
    mode: "0644"
- name: "Enable and (re)start service {{ xpaste_systemd_service }}"
  tags: systemd
  ansible.builtin.systemd:
    name: "{{ xpaste_systemd_service }}"
    daemon_reload: true
    enabled: true
    state: "started"
