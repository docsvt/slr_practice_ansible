---
- name: Check target systems prerequisists
  hosts: xpaste
  tasks:
    - name: Test if target operating eviroment CentOS 7
      delegate_to: localhost
      ansible.builtin.assert:
        quiet: true
        that:
          - ansible_distribution == "CentOS"
          - ansible_distribution_major_version | int == 7

- name: Deploy nginx core
  hosts: xpaste
  become: true
  roles:
    - nginxinc.nginx

- name: Deploy postgresql
  hosts: xpaste
  become: true
  roles:
    - role: slurm.xpastedb
      vars:
        xpastedb_user: "{{ app_xpaste_db_user }}"
        xpastedb_password: "{{ app_xpaste_db_password }}"
        xpastedb_db: "{{ app_xpaste_db_name }}"

- name: Deploy xpaste application
  hosts: xpaste
  become: true
  roles:
    - role: slurm.xpaste
      vars:
        xpaste_code_src: "{{ app_xpaste_code_src }}"
        xpaste_secret_key_base: "{{ app_xpaste_secret_key_base }}"
        xpaste_rail_env: "{{ app_xpaste_rail_env }}"
        xpaste_db_host: "{{ app_xpaste_db_host }}"
        xpaste_db_port: "{{ app_xpaste_db_port }}"
        xpaste_db_name: "{{ app_xpaste_db_name }}"
        xpaste_db_user: "{{ app_xpaste_db_user }}"
        xpaste_db_password: "{{ app_xpaste_db_password }}"
        xpaste_socket: "{{ app_xpaste_socket }}"
        xpaste_project_root: "{{ app_xpaste_project_root }}"

- name: Setup nginx to server xpaste application
  hosts: xpaste
  become: true
  tags: setup_nginx
  tasks:
    - name: Set SELinux to permissive
      ansible.posix.selinux:
        state: permissive
        policy: targeted
      when:
        - ansible_selinux.status == "enabled"
        - ansible_selinux.mode != "permissive"
    - name: Find all *.conf files in /etc/nginx/conf.d
      ansible.builtin.find:
        paths: /etc/nginx/conf.d
        patterns: (?i).*conf
        use_regex: true
      register: __deploy_xpaste_found_conf
    - name: Remove all *.conf files in /etc/nginx/conf.d
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ __deploy_xpaste_found_conf.files }}"
      loop_control:
        label: "{{ item.path }}"
      notify: Restart nginx
    - name: Copy bundled nginx configuration file
      ansible.builtin.template:
        src: "templates/nginx.conf.j2"
        dest: "/etc/nginx/nginx.conf"
        mode: "0644"
      notify: Restart nginx
  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: "nginx"
        state: "restarted"

- name: Check xpaste deploy
  hosts: xpaste
  tasks:
    - name: "Construct xpaste app url"
      ansible.builtin.set_fact:
        __deploy_xpaste_app_uri: "http://{{ ansible_default_ipv4.address }}/"
    - name: Check xpaste deploy
      delegate_to: localhost
      ansible.builtin.import_tasks:
        file: "./tasks/xpaste_deploy_assert.yml"
